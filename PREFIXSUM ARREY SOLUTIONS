ANS:1--
Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].
import java.util.*;
public class Solution {
    
        public static int[] productExceptSelf(int[] nums) {
        int n = nums.length;
        int prefixProduct = 1;
        int suffixProduct = 1;
        int[] result = new int[n];
        for(int i = 0; i < n; i++) {
            result[i] = prefixProduct;
            prefixProduct = prefixProduct*nums[i];
        }
        for(int i = n-1; i >= 0; i--) {
            result[i] = result[i]*suffixProduct;
            suffixProduct = suffixProduct*nums[i];
        }
        return result;
    }
    

    

    public static void main(String args[])
    {
        int nums[]={1,2,3,4};
        System.out.println(productExceptSelf(nums));
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ANS:2--
Calculate the sum of the elements of nums between indices left and right inclusive where left <= right.
class NumArray {
     int pf[];
    public NumArray(int[] nums) {
      pf =new int [nums.length];
       pf[0]=nums[0];
       for(int i=1;i<pf.length;i++)
       {
           pf[i]=pf[i-1]+nums[i];
       }

    }
    
    public  int sumRange(int left, int right) {
    
       if(left==0)
       {
           return pf[right];
       }
      else
      {
          return  pf[right]-pf[left-1];
      }
        
    }
}


  public class Solution
  {
      public static void main(String args[])
      {
          int nums[]={1,2,3,4,50};
         NumArray obj = new NumArray(nums);
          int param_1 = obj.sumRange(1,5);
      }
  }
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
ANS:3--
You have to pick exactly B elements from either left or right end of the array A to get the maximum sum--
------------------------------------------------------------------
ANS:4--
Given an integer array A of size N. You need to count the number of special elements in the given array-
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
ANS:5--
Given an integer n, the length of the array, return the minimum number of operations needed to make all the elements of arr equal.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
ANS:6--
Given an array A of n positive numbers. The task is to find the first equilibrium point in an array.
import java.util.*;
public class Solutionm
{
    public static int printindx(int arr[])
    {
        int pf[]=new int[arr.length];
       pf[0]=arr[0];
       for(int i=1;i<pf.length;i++)
       {
           pf[i]=pf[i-1]+arr[i];
       }
       for(int i=1;i<arr.length;i++)
       {
        
          if(pf[i-1]==(pf[arr.length-1]-pf[i]))
          {
              return i;
          }
       }
       return -1;
    }
    public static void main(String args[])
    {
       int arr[]={1,3,5,2,2};
       System.out.println(printindx(arr));
       
      
       }
    }

